{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Services/cinchy.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/appointment/appointment.component.ts","webpack:///src/app/components/appointment/appointment.component.html","webpack:///src/app/components/client/client.component.ts","webpack:///src/app/components/client/client.component.html","webpack:///src/app/components/review/review.component.ts","webpack:///src/app/components/review/review.component.html","webpack:///src/app/sidebar.directive.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CinchyService","http","getJSON","subscribe","data","console","log","get","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AppointmentComponent","ClientComponent","formBuilder","cinchyService","submitted","clientForm","group","client","required","firstName","lastName","bday","email","CompanyName","position","annualSalary","desc","favColor","hobby","datefield","phone","minLength","confirmPassword","invalid","controls","onSubmit","ReviewComponent","SidebarDirective","click","exportAs","environment","production","bootstrapModule","ref","window","destroy","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CinchyService {\n\n  constructor(private http: HttpClient) {\n    this.getJSON().subscribe(data => {\n      console.log(data);\n    });\n  }\n\n  public getJSON(): Observable<any> {\n    return this.http.get(\"./assets/clients.json\");\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClientComponent } from './components/client/client.component';\nimport { ReviewComponent } from './components/review/review.component';\nimport { AppointmentComponent } from './components/appointment/appointment.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientComponent\n  },\n  {\n    path: 'review',\n    component: ReviewComponent\n  },\n  {\n    path: 'appointment',\n    component: AppointmentComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","<div>\n  <div></div>\n\n  <nav class=\"navbar navbar-inverse navbar-fixed-top\" id=\"sidebar-wrapper\" role=\"navigation\">\n    <ul class=\"nav sidebar-nav\">\n      <li class=\"sidebar-brand\">\n        <a href=\"#\">\n          Cinchy\n        </a>\n      </li>\n      <li>\n        <a routerLink=\"/\">Client Details</a>\n      </li>\n      <li>\n        <a routerLink=\"/appointment\">Appointment Details</a>\n      </li>\n      <li>\n        <a routerLink=\"/review\">Review and Submit</a>\n      </li>\n    </ul>\n  </nav>\n\n\n  <!-- Page Content -->\n  <div id=\"page-content-wrapper\">\n    <!-- <button appSidebar #ref=\"appSidebar\" type=\"button\" class=\"hamburger is-closed\" data-toggle=\"offcanvas\">\n      <span class=\"hamb-top\"></span>\n      <span class=\"hamb-middle\"></span>\n      <span class=\"hamb-bottom\"></span>\n    </button> -->\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-8 col-lg-offset-2\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- /#page-content-wrapper -->\n\n</div>\n<!-- /#wrapper -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SidebarDirective } from './sidebar.directive';\nimport { ClientComponent } from './components/client/client.component';\nimport { ReviewComponent } from './components/review/review.component';\nimport { AppointmentComponent } from './components/appointment/appointment.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidebarDirective,\n    ClientComponent,\n    ReviewComponent,\n    AppointmentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.css']\n})\nexport class AppointmentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<p>appointment works!</p>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CinchyService } from '../../Services/cinchy.service';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css']\n})\nexport class ClientComponent implements OnInit {\n\n  clientForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder, private cinchyService: CinchyService) { }\n\n  ngOnInit(): void {\n\n    this.cinchyService.getJSON().subscribe(data => {\n      console.log(data);\n    });\n\n    this.clientForm = this.formBuilder.group({\n      client: ['', Validators.required],\n      firstName: [''],\n      lastName: [''],\n      bday: [''],\n      email: [''],\n      CompanyName: [''],\n      position: [''],\n      annualSalary: [''],\n      desc: [''],\n      favColor: [''],\n      hobby: ['', Validators.required],\n      datefield: ['', [Validators.required, Validators.email]],\n      phone: ['', [Validators.required, Validators.minLength(10)]],\n      confirmPassword: ['', Validators.required]\n    });\n\n  }\n\n  get f() {\n    return this.clientForm.controls;\n  }\n\n\n  onSubmit() {\n    this.submitted = true;\n    //return on errors\n    if (this.clientForm.invalid) {\n      return;\n    }\n  }\n}\n","<h2>Client Details</h2>\n<div class=\"container\">\n    <form [formGroup]=\"clientForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"row\">\n            <div class=\"form-group col-md-12\">\n                <label>Client<span class=\"req\">*</span></label>\n                <select formControlName=\"client\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.client.errors }\">\n                    <option value=\"\"></option>\n                    <option value=\"Mr\">Mr</option>\n                    <option value=\"Mrs\">Mrs</option>\n                    <option value=\"Miss\">Miss</option>\n                    <option value=\"Ms\">Ms</option>\n                </select>\n                <div *ngIf=\"submitted && f.client.errors\" class=\"alert alert-danger\">\n                    <div *ngIf=\"f.client.errors.required\">client is required</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n                <label>First Name</label>\n                <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" />\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label>Last Name</label>\n                <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" />\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n                <label>Birthday</label>\n                <input type=\"date\" formControlName=\"bday\" class=\"form-control\" />\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label>e-mail</label>\n                <input type=\"email\" formControlName=\"email\" class=\"form-control\" />\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n                <label>Company Name</label>\n                <input type=\"text\" formControlName=\"CompanyName\" class=\"form-control\" />\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label>Position</label>\n                <input type=\"text\" formControlName=\"position\" class=\"form-control\" />\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-md-4\">\n                <label>Annual Salary</label>\n                <input type=\"text\" formControlName=\"annualSalary\" class=\"form-control\" />\n            </div>\n            <div class=\"form-group col-md-8\">\n                <label>Description</label>\n                <textarea type=\"text\" formControlName=\"desc\" class=\"form-control\"></textarea>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n                <label>Hobby<span class=\"req\">*</span></label>\n                <input type=\"text\" formControlName=\"hobby\" class=\"form-control\"\n                    placeholder=\"ex:Reading,singing,dancing..\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.hobby.errors }\" />\n                <div *ngIf=\"submitted && f.hobby.errors\" class=\"alert alert-danger\">\n                    <div *ngIf=\"f.hobby.errors.required\">Hobby is required</div>\n                </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label>Date<span class=\"req\">*</span></label>\n                <input type=\"date\" formControlName=\"datefield\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.datefield.errors }\" />\n                <div *ngIf=\"submitted && f.datefield.errors\" class=\"alert alert-danger\">\n                    <div *ngIf=\"f.datefield.errors.required\">Date is required</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n                <label>Favourite Colour </label>\n                <select formControlName=\"favColor\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.favColor.errors }\">\n                    <option value=\"\"></option>\n                    <option value=\"Red\">Red</option>\n                    <option value=\"Blue\">Blue</option>\n                    <option value=\"Green\">Green</option>\n                    <option value=\"Yellow\">Yellow</option>\n                    <option value=\"Pink\">Pink</option>\n                    <option value=\"Orange\">Orange</option>\n                    <option value=\"Purple\">Purple</option>\n                </select>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label>Phone Number <span class=\"req\">*</span></label>\n                <input type=\"tel\" formControlName=\"phone\" class=\"form-control\" maxlength=\"10\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\n                <div *ngIf=\"submitted && f.phone.errors\" class=\"alert alert-danger\">\n                    <div *ngIf=\"f.phone.errors.required\">Phone number is required</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <button class=\"btn btn-primary\">Next</button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n \n}\n","<p>review works!</p>","import { Directive, HostListener, HostBinding } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appSidebar]',\r\n    exportAs: 'appSidebar'\r\n})\r\nexport class SidebarDirective {\r\n\r\n    @HostBinding('class.is-open') click = true;\r\n    constructor() { }\r\n\r\n\r\n    @HostListener('click') onClic() {\r\n        this.click = !this.click;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\n  // Ensure Angular destroys itself on hot reloads.\n  if (window['ngRef']) {\n    window['ngRef'].destroy();\n  }\n  window['ngRef'] = ref;\n\n  // Otherwise, log the boot error\n}).catch(err => console.error(err));\n\n"]}